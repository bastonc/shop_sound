version: "3"

services:

  postgres:
    image: postgres:12
    expose:
      - 5432
    restart: always
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - .env

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    ports:
      - 5000:80

    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  backend:
    build: ./
    container_name: shop_sound_cont
    working_dir: /shop_sound
    ports:
      - ${LOCAL_PORT}:${WSGI_PORT}
    volumes:
      - ./src/:/shop_sound
      - ./commands:/commands
      - static_content:/shop_sound/static_collect/
      - media_content:/shop_sound/media_collect/

    command:
      - /commands/start_server_${MODE}.sh
    env_file:
      - .env
    depends_on:
     - postgres
#
#  mongodb:
#    image: mongo:3-stretch
#    container_name: mongodb_container
#    restart: always
#    ports:
#      - 27017:27017
#    volumes:
#      - mongo_data:/data/db
#    command: ["--bind_ip_all", "--smallfiles"]
#    env_file:
#      - .env

#  mongoadmin:
#    image: mongo-express
#    restart: always
#    container_name: mongo_admin_container
#    ports:
#      - 8091:8081
#    env_file:
#      - .env
#    links:
#      - mongodb
#    depends_on:
#      - mongodb

  nginx:
    image: nginx:1.19
    volumes:
      - static_content:/shop_sound/static/
      - media_content:/shop_sound/media/
      - ./nginx:/etc/nginx/conf.d
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    depends_on:
      - backend


  celery-service:
    build: ./
    command:
      - /commands/start_celery.sh

    restart: always
    volumes:
      - ./src/:${CELERY_WORKING_DIR}
      - ./commands:/commands
    env_file:
      - .env
    ports:
      - 5556:5555
    depends_on:
      - redis

  redis:
    image: redis
    env_file:
      - .env
    restart: always
    depends_on:
      - backend

  redisadmin:
    container_name: redisadmin
    image: rediscommander/redis-commander:latest
    hostname: redisadmin
    restart: always
    ports:
      - 8092:8081
    env_file:
      - .env

volumes:
  local_postgres_data:
  local_postgres_data_backups:
  pgadmin_data:
  mongo_data:
  static_content:
  media_content:

